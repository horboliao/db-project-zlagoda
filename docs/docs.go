// Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/customer-card": {
            "get": {
                "description": "List customer cards",
                "tags": [
                    "customer-card"
                ],
                "summary": "List customer cards",
                "operationId": "list-cards",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Card ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.CustomerCard"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            },
            "post": {
                "tags": [
                    "customer-card"
                ],
                "summary": "Create customer card",
                "operationId": "Create customer card",
                "parameters": [
                    {
                        "description": "Card",
                        "name": "card",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.CustomerCard"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.CustomerCard"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            },
            "delete": {
                "description": "Delete customer cards",
                "tags": [
                    "customer-card"
                ],
                "summary": "Delete customer cards",
                "operationId": "delete-cards",
                "parameters": [
                    {
                        "description": "Card IDs",
                        "name": "ids",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.deleteCardsRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.CustomerCard"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            }
        },
        "/customer-card/{id}": {
            "get": {
                "description": "Get customer card",
                "tags": [
                    "customer-card"
                ],
                "summary": "Get customer card",
                "operationId": "get-card",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Card ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.CustomerCard"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            },
            "put": {
                "description": "Update customer card",
                "tags": [
                    "customer-card"
                ],
                "summary": "Update customer card",
                "operationId": "update-card",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Card ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Card",
                        "name": "card",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.CustomerCard"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.CustomerCard"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            }
        },
        "/product": {
            "get": {
                "description": "List products",
                "tags": [
                    "product"
                ],
                "summary": "List products",
                "operationId": "list-products",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.Product"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            },
            "post": {
                "description": "Create product (using product category)",
                "tags": [
                    "product"
                ],
                "summary": "Create product",
                "operationId": "create-product",
                "parameters": [
                    {
                        "description": "Product",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.Product"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Product"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            },
            "delete": {
                "description": "Delete products",
                "tags": [
                    "product"
                ],
                "summary": "Delete products",
                "operationId": "delete-products",
                "parameters": [
                    {
                        "description": "Product IDs",
                        "name": "ids",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.deleteProductsRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            }
        },
        "/product/category": {
            "get": {
                "description": "List product categories",
                "tags": [
                    "product category"
                ],
                "summary": "List product categories",
                "operationId": "list-product-categories",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.ProductCategory"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            },
            "post": {
                "description": "Create product category",
                "tags": [
                    "product category"
                ],
                "summary": "Create product category",
                "operationId": "create-product-category",
                "parameters": [
                    {
                        "description": "Product category",
                        "name": "category",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.ProductCategory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.ProductCategory"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            },
            "delete": {
                "description": "Delete product categories",
                "tags": [
                    "product category"
                ],
                "summary": "Delete product categories",
                "operationId": "delete-product-categories",
                "parameters": [
                    {
                        "description": "Product category IDs",
                        "name": "ids",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.deleteCategoriesRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            }
        },
        "/product/category/{id}": {
            "put": {
                "description": "Update product category",
                "tags": [
                    "product category"
                ],
                "summary": "Update product category",
                "operationId": "update-product-category",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Product category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Product category",
                        "name": "category",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.ProductCategory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.ProductCategory"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            }
        },
        "/product/store": {
            "get": {
                "description": "List store products",
                "tags": [
                    "product in store"
                ],
                "summary": "List store products",
                "operationId": "list-store-products",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.StoreProduct"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            },
            "post": {
                "description": "Create store product",
                "tags": [
                    "product in store"
                ],
                "summary": "Create store product",
                "operationId": "create-store-product",
                "parameters": [
                    {
                        "description": "Store product",
                        "name": "store_product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.StoreProduct"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.StoreProduct"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            },
            "delete": {
                "description": "Delete store products",
                "tags": [
                    "product in store"
                ],
                "summary": "Delete store products",
                "operationId": "delete-store-products",
                "parameters": [
                    {
                        "description": "Store product IDs",
                        "name": "ids",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.deleteStoreProductsRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            }
        },
        "/product/store/{id}": {
            "get": {
                "tags": [
                    "product in store"
                ],
                "summary": "Get store product",
                "operationId": "get-store-products",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.StoreProduct"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            },
            "put": {
                "description": "Update store product",
                "tags": [
                    "product in store"
                ],
                "summary": "Update store product",
                "operationId": "update-store-product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Store product ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Store product",
                        "name": "store_product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.StoreProduct"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.StoreProduct"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            }
        },
        "/product/{id}": {
            "get": {
                "description": "Get product",
                "tags": [
                    "product"
                ],
                "summary": "Get product",
                "operationId": "get-product",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Product ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Product"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            },
            "put": {
                "description": "Update product",
                "tags": [
                    "product"
                ],
                "summary": "Update product",
                "operationId": "update-product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Product",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.Product"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Product"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            }
        }
    },
    "definitions": {
        "entity.CustomerCard": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "discount": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "patronymic": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "street": {
                    "type": "string"
                },
                "surname": {
                    "type": "string"
                },
                "zip_code": {
                    "type": "string"
                }
            }
        },
        "entity.Product": {
            "type": "object",
            "properties": {
                "category_id": {
                    "type": "integer"
                },
                "characteristics": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "entity.ProductCategory": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "entity.StoreProduct": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "product_id": {
                    "type": "integer"
                },
                "promotional": {
                    "type": "boolean"
                },
                "promotional_id": {
                    "type": "string"
                }
            }
        },
        "http.deleteCardsRequestBody": {
            "type": "object",
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "http.deleteCategoriesRequestBody": {
            "type": "object",
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "http.deleteProductsRequestBody": {
            "type": "object",
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "http.deleteStoreProductsRequestBody": {
            "type": "object",
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8082",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "App Zlagoda api",
	Description:      "project for db market zlagoda",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
