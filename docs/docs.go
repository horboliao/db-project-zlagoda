// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/check": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "List checks",
                "tags": [
                    "check"
                ],
                "summary": "List checks",
                "operationId": "list-checks",
                "parameters": [
                    {
                        "type": "string",
                        "name": "cardID",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "employeeID",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "example": "2000-01-01T00:00:00Z",
                        "name": "endDate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "example": "2000-01-01T00:00:00Z",
                        "name": "startDate",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.Check"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "tags": [
                    "check"
                ],
                "summary": "Create check",
                "operationId": "Create check",
                "parameters": [
                    {
                        "description": "Check",
                        "name": "check",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.Check"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Check"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            }
        },
        "/check/check-item": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get check item",
                "tags": [
                    "check-item"
                ],
                "summary": "Get check item",
                "operationId": "get-check-item",
                "parameters": [
                    {
                        "type": "string",
                        "name": "checkId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "storeProductId",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.CheckItem"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update check item",
                "tags": [
                    "check-item"
                ],
                "summary": "Update check item",
                "operationId": "update-check-item",
                "parameters": [
                    {
                        "type": "string",
                        "name": "checkId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "storeProductId",
                        "in": "query"
                    },
                    {
                        "description": "Check item",
                        "name": "check-item",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.CheckItem"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.updateCheckItemResponseBody"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "tags": [
                    "check-item"
                ],
                "summary": "Create check item",
                "operationId": "Create check item",
                "parameters": [
                    {
                        "description": "Check item",
                        "name": "check-item",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.CheckItem"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.createCheckItemResponseBody"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete check items",
                "tags": [
                    "check-item"
                ],
                "summary": "Delete check items",
                "operationId": "delete-check-items",
                "parameters": [
                    {
                        "description": "Check item ID",
                        "name": "id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.deleteCheckItemsRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.deleteCheckItemsResponseBody"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            }
        },
        "/check/check-item/list": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "List check items",
                "tags": [
                    "check-item"
                ],
                "summary": "List check items",
                "operationId": "list-check-items",
                "parameters": [
                    {
                        "type": "string",
                        "name": "checkID",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "example": "2000-01-01T00:00:00Z",
                        "name": "endDate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "example": "2000-01-01T00:00:00Z",
                        "name": "startDate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "storeProductID",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.CheckItem"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            }
        },
        "/check/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get check",
                "tags": [
                    "check"
                ],
                "summary": "Get check",
                "operationId": "get-check",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Check ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Check"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete checks",
                "tags": [
                    "check"
                ],
                "summary": "Delete checks",
                "operationId": "delete-checks",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Check ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            }
        },
        "/customer-card": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "tags": [
                    "customer-card"
                ],
                "summary": "List customer cards",
                "operationId": "List customer cards",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "discount",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "sortAscending",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "sortSurname",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.CustomerCard"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "tags": [
                    "customer-card"
                ],
                "summary": "Create customer card",
                "operationId": "Create customer card",
                "parameters": [
                    {
                        "description": "Card",
                        "name": "card",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.CustomerCard"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.CustomerCard"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            }
        },
        "/customer-card/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get customer card",
                "tags": [
                    "customer-card"
                ],
                "summary": "Get customer card",
                "operationId": "get-card",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Card ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.CustomerCard"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update customer card",
                "tags": [
                    "customer-card"
                ],
                "summary": "Update customer card",
                "operationId": "update-card",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Card ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Card",
                        "name": "card",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.CustomerCard"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.CustomerCard"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete customer cards",
                "tags": [
                    "customer-card"
                ],
                "summary": "Delete customer cards",
                "operationId": "delete-cards",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Card ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            }
        },
        "/employee": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "List employees",
                "tags": [
                    "employee"
                ],
                "summary": "List employees",
                "operationId": "list-employee",
                "parameters": [
                    {
                        "type": "string",
                        "name": "role",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "sortAscending",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "sortSurname",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "slice"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create employee",
                "tags": [
                    "employee"
                ],
                "summary": "Create employee",
                "operationId": "create-employee",
                "parameters": [
                    {
                        "description": "Employee",
                        "name": "employee",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.Employee"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Employee"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            }
        },
        "/employee/login": {
            "post": {
                "description": "Login",
                "tags": [
                    "employee"
                ],
                "summary": "Login",
                "operationId": "login",
                "parameters": [
                    {
                        "description": "login data",
                        "name": "fields",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.loginRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.loginResponseBody"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            }
        },
        "/employee/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get employee",
                "tags": [
                    "employee"
                ],
                "summary": "Get employee",
                "operationId": "get-employee",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Employee ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Employee"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update employee",
                "tags": [
                    "employee"
                ],
                "summary": "Update employee",
                "operationId": "update-employee",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Employee ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Employee",
                        "name": "employee",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.Employee"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Employee"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete employee",
                "tags": [
                    "employee"
                ],
                "summary": "Delete employee",
                "operationId": "delete-employee",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Employee ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            }
        },
        "/product": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "List products",
                "tags": [
                    "product"
                ],
                "summary": "List products",
                "operationId": "list-products",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "categoryID",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "sortAscending",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "sortName",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.Product"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create product (using product category)",
                "tags": [
                    "product"
                ],
                "summary": "Create product",
                "operationId": "create-product",
                "parameters": [
                    {
                        "description": "Product",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.Product"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Product"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            }
        },
        "/product/category": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "List product categories",
                "tags": [
                    "product category"
                ],
                "summary": "List product categories",
                "operationId": "list-product-categories",
                "parameters": [
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "sortAscending",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "sortName",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.ProductCategory"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create product category",
                "tags": [
                    "product category"
                ],
                "summary": "Create product category",
                "operationId": "create-product-category",
                "parameters": [
                    {
                        "description": "Product category",
                        "name": "category",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.ProductCategory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.ProductCategory"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            }
        },
        "/product/category/{id}": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update product category",
                "tags": [
                    "product category"
                ],
                "summary": "Update product category",
                "operationId": "update-product-category",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Product category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Product category",
                        "name": "category",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.ProductCategory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.ProductCategory"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete product categories",
                "tags": [
                    "product category"
                ],
                "summary": "Delete product categories",
                "operationId": "delete-product-categories",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            }
        },
        "/product/store": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "List store products",
                "tags": [
                    "product in store"
                ],
                "summary": "List store products",
                "operationId": "list-store-products",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "categoryID",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "productID",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "promotion",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "sortAscending",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "sortCount",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "sortName",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "name": "sortPrice",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.StoreProduct"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create store product",
                "tags": [
                    "product in store"
                ],
                "summary": "Create store product",
                "operationId": "create-store-product",
                "parameters": [
                    {
                        "description": "Store product",
                        "name": "store_product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.StoreProduct"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/service.CreateStoreProductOutput"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete store products",
                "tags": [
                    "product in store"
                ],
                "summary": "Delete store products",
                "operationId": "delete-store-products",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Store product ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            }
        },
        "/product/store/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "tags": [
                    "product in store"
                ],
                "summary": "Get store product",
                "operationId": "get-store-products",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.StoreProduct"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update store product",
                "tags": [
                    "product in store"
                ],
                "summary": "Update store product",
                "operationId": "update-store-product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Store product ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Store product",
                        "name": "store_product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.StoreProduct"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.StoreProduct"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            }
        },
        "/product/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get product",
                "tags": [
                    "product"
                ],
                "summary": "Get product",
                "operationId": "get-product",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Product ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Product"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update product",
                "tags": [
                    "product"
                ],
                "summary": "Update product",
                "operationId": "update-product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Product",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.Product"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Product"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Delete products",
                "tags": [
                    "product"
                ],
                "summary": "Delete products",
                "operationId": "delete-products",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Product ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            }
        },
        "/statistics/customers-buy-all-categories": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get customers buy all categories",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "statistics"
                ],
                "summary": "Get customers buy all categories",
                "parameters": [
                    {
                        "type": "string",
                        "format": "date-time",
                        "example": "2000-01-01T00:00:00Z",
                        "name": "endDate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "example": "2000-01-01T00:00:00Z",
                        "name": "startDate",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.CustomerBuyAllCategories"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            }
        },
        "/statistics/customers-checks": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get customers checks",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "statistics"
                ],
                "summary": "Get customers checks",
                "parameters": [
                    {
                        "type": "string",
                        "format": "date-time",
                        "example": "2000-01-01T00:00:00Z",
                        "name": "endDate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "example": "2000-01-01T00:00:00Z",
                        "name": "startDate",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.CustomerCheck"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            }
        },
        "/statistics/employees-checks": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get employees checks",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "statistics"
                ],
                "summary": "Get employees checks",
                "parameters": [
                    {
                        "type": "string",
                        "format": "date-time",
                        "example": "2000-01-01T00:00:00Z",
                        "name": "endDate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "example": "2000-01-01T00:00:00Z",
                        "name": "startDate",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.EmployeeCheck"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            }
        },
        "/statistics/employees-without-checks": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get employees without checks",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "statistics"
                ],
                "summary": "Get employees without checks",
                "parameters": [
                    {
                        "type": "string",
                        "format": "date-time",
                        "example": "2000-01-01T00:00:00Z",
                        "name": "endDate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "example": "2000-01-01T00:00:00Z",
                        "name": "startDate",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.Employee"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            }
        },
        "/statistics/sales-by-category": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get sales by category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "statistics"
                ],
                "summary": "Get sales by category",
                "parameters": [
                    {
                        "type": "string",
                        "format": "date-time",
                        "example": "2000-01-01T00:00:00Z",
                        "name": "endDate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "example": "2000-01-01T00:00:00Z",
                        "name": "startDate",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.CategorySale"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {}
                    }
                }
            }
        }
    },
    "definitions": {
        "entity.CategorySale": {
            "type": "object",
            "properties": {
                "avgDiscount": {
                    "type": "number"
                },
                "avgSellingPrice": {
                    "type": "number"
                },
                "categoryName": {
                    "type": "string"
                },
                "categoryNumber": {
                    "type": "integer"
                },
                "totalProductsSold": {
                    "type": "integer"
                },
                "totalSales": {
                    "type": "integer"
                }
            }
        },
        "entity.Check": {
            "type": "object",
            "properties": {
                "customer_card_id": {
                    "type": "string"
                },
                "date": {
                    "type": "string",
                    "format": "date-time"
                },
                "employee_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "total_price": {
                    "type": "number"
                },
                "vat": {
                    "type": "number"
                }
            }
        },
        "entity.CheckItem": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/definitions/entity.CheckItemID"
                },
                "product_count": {
                    "type": "integer"
                },
                "product_price": {
                    "type": "number"
                }
            }
        },
        "entity.CheckItemID": {
            "type": "object",
            "properties": {
                "check_id": {
                    "type": "string"
                },
                "store_product_id": {
                    "type": "string"
                }
            }
        },
        "entity.CustomerBuyAllCategories": {
            "type": "object",
            "properties": {
                "customerCardID": {
                    "type": "string"
                },
                "customerName": {
                    "type": "string"
                },
                "customerPatr": {
                    "type": "string"
                },
                "customerSurname": {
                    "type": "string"
                }
            }
        },
        "entity.CustomerCard": {
            "type": "object",
            "required": [
                "city",
                "id",
                "name",
                "patronymic",
                "phone_number",
                "street",
                "surname",
                "zip_code"
            ],
            "properties": {
                "city": {
                    "type": "string",
                    "maxLength": 50
                },
                "discount": {
                    "type": "integer"
                },
                "id": {
                    "type": "string",
                    "maxLength": 13
                },
                "name": {
                    "type": "string",
                    "maxLength": 50
                },
                "patronymic": {
                    "type": "string",
                    "maxLength": 50
                },
                "phone_number": {
                    "type": "string",
                    "maxLength": 13
                },
                "street": {
                    "type": "string",
                    "maxLength": 50
                },
                "surname": {
                    "type": "string",
                    "maxLength": 50
                },
                "zip_code": {
                    "type": "string",
                    "maxLength": 9
                }
            }
        },
        "entity.CustomerCheck": {
            "type": "object",
            "properties": {
                "averageCheckPrice": {
                    "type": "number"
                },
                "checkCount": {
                    "type": "integer"
                },
                "customerID": {
                    "type": "string"
                },
                "customerName": {
                    "type": "string"
                },
                "customerPatr": {
                    "type": "string"
                },
                "customerSurname": {
                    "type": "string"
                },
                "totalCheckPrice": {
                    "type": "number"
                }
            }
        },
        "entity.Employee": {
            "type": "object",
            "required": [
                "city",
                "date_of_birth",
                "date_of_start",
                "id",
                "name",
                "patronymic",
                "phone",
                "role",
                "salary",
                "street",
                "surname",
                "zip"
            ],
            "properties": {
                "city": {
                    "type": "string",
                    "maxLength": 50
                },
                "date_of_birth": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2000-01-01T00:00:00Z"
                },
                "date_of_start": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2021-01-01T00:00:00Z"
                },
                "id": {
                    "type": "string",
                    "maxLength": 10
                },
                "name": {
                    "type": "string",
                    "maxLength": 50
                },
                "password": {
                    "type": "string"
                },
                "patronymic": {
                    "type": "string",
                    "maxLength": 50
                },
                "phone": {
                    "type": "string",
                    "maxLength": 13
                },
                "role": {
                    "type": "string",
                    "maxLength": 10
                },
                "salary": {
                    "type": "number"
                },
                "street": {
                    "type": "string",
                    "maxLength": 50
                },
                "surname": {
                    "type": "string",
                    "maxLength": 50
                },
                "zip": {
                    "type": "string",
                    "maxLength": 9
                }
            }
        },
        "entity.EmployeeCheck": {
            "type": "object",
            "properties": {
                "averageCheckPrice": {
                    "type": "number"
                },
                "checkCount": {
                    "type": "integer"
                },
                "differentCustomers": {
                    "type": "integer"
                },
                "emplName": {
                    "type": "string"
                },
                "emplSurname": {
                    "type": "string"
                },
                "idEmployee": {
                    "type": "string"
                },
                "totalCheckPrice": {
                    "type": "number"
                },
                "totalDiscount": {
                    "type": "number"
                }
            }
        },
        "entity.Product": {
            "type": "object",
            "required": [
                "category_id",
                "characteristics",
                "id",
                "name"
            ],
            "properties": {
                "category_id": {
                    "type": "integer"
                },
                "characteristics": {
                    "type": "string",
                    "maxLength": 100
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string",
                    "maxLength": 50
                }
            }
        },
        "entity.ProductCategory": {
            "type": "object",
            "required": [
                "id",
                "name"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string",
                    "maxLength": 50
                }
            }
        },
        "entity.StoreProduct": {
            "type": "object",
            "required": [
                "count",
                "id",
                "price",
                "product_id",
                "promotional"
            ],
            "properties": {
                "count": {
                    "type": "integer"
                },
                "id": {
                    "type": "string",
                    "maxLength": 12
                },
                "price": {
                    "type": "number"
                },
                "product_id": {
                    "type": "integer"
                },
                "promotional": {
                    "type": "boolean"
                },
                "promotional_id": {
                    "type": "string",
                    "maxLength": 12
                }
            }
        },
        "http.createCheckItemResponseBody": {
            "type": "object",
            "properties": {
                "check": {
                    "$ref": "#/definitions/entity.Check"
                },
                "checkItem": {
                    "$ref": "#/definitions/entity.CheckItem"
                },
                "product": {
                    "$ref": "#/definitions/entity.StoreProduct"
                }
            }
        },
        "http.deleteCheckItemsRequestBody": {
            "type": "object",
            "properties": {
                "id": {
                    "$ref": "#/definitions/entity.CheckItemID"
                }
            }
        },
        "http.deleteCheckItemsResponseBody": {
            "type": "object",
            "properties": {
                "check": {
                    "$ref": "#/definitions/entity.Check"
                },
                "product": {
                    "$ref": "#/definitions/entity.StoreProduct"
                }
            }
        },
        "http.loginRequestBody": {
            "type": "object",
            "required": [
                "employeeId",
                "password"
            ],
            "properties": {
                "employeeId": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "http.loginResponseBody": {
            "type": "object",
            "properties": {
                "authToken": {
                    "type": "string"
                },
                "employee": {
                    "$ref": "#/definitions/entity.Employee"
                }
            }
        },
        "http.updateCheckItemResponseBody": {
            "type": "object",
            "properties": {
                "check": {
                    "$ref": "#/definitions/entity.Check"
                },
                "checkItem": {
                    "$ref": "#/definitions/entity.CheckItem"
                },
                "product": {
                    "$ref": "#/definitions/entity.StoreProduct"
                }
            }
        },
        "service.CreateStoreProductOutput": {
            "type": "object",
            "properties": {
                "createdStoreProduct": {
                    "$ref": "#/definitions/entity.StoreProduct"
                },
                "updatedStoreProduct": {
                    "$ref": "#/definitions/entity.StoreProduct"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8082",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "App Zlagoda api",
	Description:      "project for db market zlagoda",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
